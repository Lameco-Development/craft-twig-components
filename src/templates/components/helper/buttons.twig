{# Theme #}
{% set theme = theme is defined and theme is not empty
  ? theme|json_decode
  : _globals.get('lameco.components.theme')
%}

{# Component Variables #}
{% set buttons = buttons ?? null %}
{% set class = class ?? null %}
{% set buttonDarkMode = buttonDarkMode ?? false %}

{# Component #}
{% if buttons is not empty %}
  <div
    class="{{ class }}{{
    theme.gsapAnimations is defined and theme.gsapAnimations
      ? ' content-fade-in'
      : ''
    }}"
  >
    {% for button in buttons|filter(
      button => ((button is instance of('verbb\\hyper\\links\\Entry')
        or button is instance of('verbb\\hyper\\links\\Custom')
        or button is instance of('verbb\\hyper\\links\\Email')
        or button is instance of('verbb\\hyper\\links\\Phone')
        or (button is instance of('verbb\\hyper\\links\\Url') and not button.isEmpty()))
        and not button.isEmpty())
        or (button.linkText is defined and button.linkText is not empty)
    ) %}
      {% if
        button is instance of('verbb\\hyper\\links\\Entry')
          or button is instance of('verbb\\hyper\\links\\Custom')
          or button is instance of('verbb\\hyper\\links\\Email')
          or button is instance of('verbb\\hyper\\links\\Phone')
          or (button is instance of('verbb\\hyper\\links\\Url') and not button.isEmpty()) %}
        {% set type = button.linkType.value ~ (buttonDarkMode ? 'Dark') %}
        <x-ui.button hyper="{{ button }}" type="{{ type }}"></x-ui.button>
      {% elseif button.linkText is defined and button.linkText is not empty %}
        {% set type = button.linkType.value ~ (buttonDarkMode ? 'Dark') %}
        <x-ui.button link="{{ button.linkText }}" type="{{ type }}"></x-ui.button>
      {% endif %}
    {% endfor %}
  </div>
{% endif %}
