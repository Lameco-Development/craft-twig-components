{# Theme #}
{% set theme = theme is defined and theme is not empty
  ? theme|json_decode
  : _globals.get('lameco.components.theme')
%}

{# Component Variables #}
{% set block = block %}

{% set sectionClass = sectionClass ?? 'bg-none' %}
{% set containerClass = containerClass ?? 'container' %}
{% set innerClass = innerClass ?? 'flex flex-col lg:flex-row lg:items-center gap-8' %}
{% set containerSlot = containerSlot ?? null %}

{% set mediaColClass = mediaColClass ?? 'lg:w-1/2' %}
{% set mediaSlot = mediaSlot ?? null %}

{% set imageTransform = imageTransform ?? null %}
{% set imageClass = imageClass is defined
  ? imageClass ~ ' max-h-160 max-w-full w-auto'
  : 'max-h-160 max-w-full w-auto'
%}
{% set image = block.image.eagerly().withTransforms(imageTransform).one() %}

{% set videoClass = videoClass ?? null %}
{% set video = block.video.eagerly().one() %}
{% set videoSlot = videoSlot ?? null %}

{% set contentColClass = contentColClass ?? 'lg:w-1/2' %}
{% set contentInnerClass = contentInnerClass ?? 'relative' %}
{% set contentSlot = contentSlot ?? null %}

{% set preTitleClass = preTitleClass ?? null %}
{% set titleClass = titleClass ?? null %}
{% set contentClass = contentClass ?? null %}

{% set buttonWrapperClass = buttonWrapperClass ?? null %}
{% set buttonDarkMode = buttonDarkMode ?? false %}

{# Component #}
<section class="page-builder-block {{ sectionClass }}" data-block="{{ block.type }}">
  <div class="{{ containerClass }}">
    {{ containerSlot|raw }}

    <div class="{{ innerClass }}">
      {# Media #}
      <div
        class="{{ mediaColClass }}{{
        block.alignment
          ? ' lg:order-last'
          : ''
        }} relative flex items-center justify-center"
      >
        {% if video is not empty %}
          <x-ui.video
            video="{{ video }}"
            image="{{ image }}"
            imageTransform="{{ imageTransform }}"
            class="{{ videoClass }}"
          ></x-ui.video>
        {% elseif image is not empty %}
          <x-ui.image
            image="{{ image }}"
            transform="{{ imageTransform }}"
            imgClass="{{ imageClass }}"
          ></x-ui.image>
        {% endif %}

        {{ mediaSlot|raw }}
      </div>

      {# Content #}
      <div
        class="{{ contentColClass }}{{ block.alignment ? ' lg:order-first' : '' }}{{
        theme.gsapAnimations is defined and theme.gsapAnimations
          ? ' content-fade-in'
          : ''
        }} relative"
      >
        <div class="{{ contentInnerClass }}">
          {% if block['blockPreTitle'] is defined and block.preTitle is not empty %}
            <div class="{{ preTitleClass }}">
              {{ block.preTitle|raw }}
            </div>
          {% endif %}

          {% if block.title is defined and block.title is not empty %}
            <x-ui.title level="{{ block.titleLevel }}" class="{{ titleClass }}">
              {{ block.title }}
            </x-ui.title>
          {% endif %}

          {% if block.content is not empty %}
            <div class="{{ contentClass }} text-block">
              {{ block.content|raw }}
            </div>
          {% endif %}

          {% if block.buttons is not empty %}
            <div
              class="{{ buttonWrapperClass }}{{
              theme.gsapAnimations is defined and theme.gsapAnimations
                ? ' content-fade-in'
                : ''
              }}"
            >
              {% for button in block.buttons|filter(
                button => ((button is instance of('verbb\\hyper\\links\\Entry')
                  or button is instance of('verbb\\hyper\\links\\Custom')
                  or button is instance of('verbb\\hyper\\links\\Email')
                  or button is instance of('verbb\\hyper\\links\\Phone')
                  or (button is instance of('verbb\\hyper\\links\\Url') and not button.isEmpty()))
                  and not button.isEmpty())
                  or (button.linkButton is defined and button.linkButton is not empty)
              ) %}
                {% if
                  button is instance of('verbb\\hyper\\links\\Entry')
                    or button is instance of('verbb\\hyper\\links\\Custom')
                    or button is instance of('verbb\\hyper\\links\\Email')
                    or button is instance of('verbb\\hyper\\links\\Phone')
                    or (button is instance of('verbb\\hyper\\links\\Url')
                      and not button.isEmpty()) %}
                  {% set type = button.linkType.value ~ (buttonDarkMode ? 'Dark') %}
                  <x-ui.button hyper="{{ button }}" type="{{ type }}"></x-ui.button>
                {% elseif button.linkButton is defined and button.linkButton is not empty %}
                  {% set type = button.linkType.value ~ (buttonDarkMode ? 'Dark') %}
                  <x-ui.button link="{{ button.linkButton }}" type="{{ type }}"></x-ui.button>
                {% endif %}
              {% endfor %}
            </div>
          {% endif %}
        </div>

        {{ contentSlot|raw }}
      </div>
    </div>
  </div>
</section>
