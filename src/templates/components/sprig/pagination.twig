{# Theme #}
{% set theme = theme is defined and theme is not empty
  ? theme|json_decode
  : _globals.get('lameco.components.theme')
%}

{# Component Variables #}
{% set pageInfo = pageInfo ?? null %}
{% set neighbours = theme.sprig.pagination.neighbours ?? 1 %}
{% set ellipsisHtml = theme.sprig.pagination.ellipsis.html ?? "&hellip;" %}
{% set ellipsisClass = theme.sprig.pagination.ellipsis.class ?? "&hellip;" %}
{% set itemClass = theme.sprig.pagination.item.class ?? 'flex items-center justify-center' %}
{% set itemActiveClass = theme.sprig.pagination.item.active.class ?? '' %}
{% set arrowsClass = theme.sprig.pagination.arrows.class ?? '' %}
{% set arrowsDisabledClass = theme.sprig.pagination.arrows.disabled.class ?? '' %}
{% set arrowsPrevHtml = theme.sprig.pagination.arrows.prev.html ?? '<i class="fa-regular fa-chevron-left"></i>' %}
{% set arrowsNextHtml = theme.sprig.pagination.arrows.next.html ?? '<i class="fa-regular fa-chevron-right"></i>' %}

{# Component #}
{% if pageInfo is defined and pageInfo.totalPages > 1 %}
  {% import _self as self %}

  {# seomatic #}
  {# https://github.com/nystudio107/craft-seomatic#pagination-and-seo #}
  {% if seomatic is defined %}
    {% do seomatic.helper.paginate(pageInfo) %}

    {% if pageInfo.currentPage != 1 %}
      {% do seomatic.meta.robots('noindex, follow') %}
    {% endif %}
  {% endif %}


  <nav class="{{ theme.sprig.pagination.class ?? '' }}" role="navigation" aria-label="{{ 'pagination'| t }}">
    <ul class="{{ theme.sprig.pagination.list.class ?? 'flex items-center' }}">

      {# previous #}
      {{ self.textLink(pageInfo.prevUrl, arrowsPrevHtml, 'pagination.prevPage'| t, pageInfo.currentPage - 1, pageInfo.prevUrl is not empty, arrowsClass, arrowsDisabledClass) }}

      {# first #}
      {% if pageInfo.currentPage - neighbours > 1 %}
        {{ self.numericLink(pageInfo.firstUrl, '1', false, itemClass) }}
      {% endif %}

      {# ellipsis before current #}
      {% if pageInfo.currentPage - neighbours > 2 %}
        {{ self.ellipsis(ellipsisClass, ellipsisHtml) }}
      {% endif %}

      {# links before current #}
      {% for page, url in pageInfo.getPrevUrls(neighbours) %}
        {{ self.numericLink(url, page, false, itemClass) }}
      {% endfor %}

      {# current #}
      {{ self.numericLink('', pageInfo.currentPage, true, itemClass, itemActiveClass) }}

      {# links after current #}
      {% for page, url in pageInfo.getNextUrls(neighbours) %}
        {{ self.numericLink(url, page, false, itemClass) }}
      {% endfor %}

      {# ellipsis after current #}
      {% if pageInfo.totalPages - pageInfo.currentPage > neighbours + 1 %}
        {{ self.ellipsis(ellipsisClass, ellipsisHtml) }}
      {% endif %}

      {# last #}
      {% if pageInfo.currentPage + neighbours < pageInfo.totalPages %}
        {{ self.numericLink(pageInfo.lastUrl, pageInfo.totalPages, false, itemClass) }}
      {% endif %}

      {# next #}
      {{ self.textLink(pageInfo.nextUrl, arrowsNextHtml, ('pagination.nextPage' | t), pageInfo.currentPage + 1, pageInfo.nextUrl is not empty, arrowsClass, arrowsDisabledClass) }}

    </ul>
  </nav>
{% endif %}

{# Macros #}
{# single numeric link #}
{% macro numericLink(url, number, current, class, activeClass) %}
  <li>
    <button sprig s-val:page="{{ number }}" s-swap="innerHTML show:top" {% if replace is defined and replace is not empty %} s-replace="{{ replace }}"{% endif %} s-indicator=".sprig-loader--js"
            class="transition-colors {{ class }} {{ current ? activeClass }}"
            aria-label="{{ current ? ('pagination.currentPage' | t) : ('pagination.goToPage' | t) ~ ' ' ~ number }}" {{ current ? 'aria-current="page"' }}>
      {{ number }}
    </button>
  </li>
{% endmacro %}

{# next/prev link #}
{% macro textLink(url, html, aria, number, enabled, class, disabledClass) %}
  <li >
    <button sprig s-val:page="{{ number }}" s-swap="innerHTML show:top" {% if replace is defined and replace is not empty %} s-replace="{{ replace }}"{% endif %} s-indicator=".sprig-loader--js"
            class="transition-colors {{ class }} {{ not enabled ? disabledClass }}"{% if not enabled %} disabled{% endif %} aria-label="{{ aria }}">
      {{ html|raw }}
    </button>
  </li>
{% endmacro %}

{# ellipsis #}
{% macro ellipsis(class, html) %}
  <li>
        <span class="w-10 h-10 leading-10 text-center">
            {{ html|raw }}
        </span>
  </li>
{% endmacro %}
